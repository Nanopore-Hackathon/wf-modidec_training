//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    chunk_size = 400
    batch_size = 128
    single_data_size = 8
    max_seq_length = 40
    kmer_model = 9
    labels = 1
    epochs = 4
    model_name = ""
    train_path = ""
    valid_path = ""
    model_path = ""
}

manifest {
    name            = 'modidec'
    author          = 'Nicolo Alagna, Andre Holzer, Stefan Pastore'
    homePage        = 'https://github.com/stegiopast/wf-modidec_analysis'
    description     = 'Training workflow for RNA molecules modification classifier'
    mainScript      = 'main.nf'
    nextflowVersion = '>=23.04.2'
    version         = 'v0.1'
    defaultBranch   = 'main'
}

// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process{
    container="stegiopast/modidec:latest"
    withLabel:"modidec"{
        container="stegiopast/modidec:latest"
        memory="16GB"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}

profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            runOptions = "--gpus all --user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }

    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            withLabel:wf_common {
                container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}

timeline {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/trace.txt"
}

env {
    PYTHONNOUSERSITE = 1
}
